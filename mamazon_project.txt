DjangoでECサイトの開発

１．「パッケージのインストール」

　・Django
　・--dev autopep8 flake8
　（--devと付ける理由はサーバーにアップロードする際には
　必要ないので分けている。開発用ツールとして付与する。
　（自分の開発サーバーではオプション--devが使えない。

２．「スタートプロジェクトでconfigファイルの作成」

　・python3 manage.py startproject config .
　（今までは分かりやすくプロジェクト名を付けていたが
　　「config .」と打つとカレントディレクトリ内にconfigファイル
　　が出来上がってさらに分かりやすくなった。

３．「ランサーバーコマンドを打つとDjangoのホームページが立ち上がる」

４．アプリを作成する

　・python3 manage.py startapp mamazon

５．マイグレートする

　・python3 manage.py migrate

６．gitを起動する

　・git init
　（恐らくディレクトリ内にあるファイル群をサーチしている
　・git add .
　（gitにファイル群を追加する
　・git status
　（追加ファイル群を確認
　・git commit -m 'メッセージ'
　（追加したファイル群を保存する。メッセージを入れる理由は
　　その時コミットしたファイル群をロードするために分かりやすい
　　メッセージを入れる。
　・git reset --hard 'ひとつ前の何らかのコードをコピーして貼り付け'
　（１つ前のコミットに戻りたいとき

　・コメント
　　gitのいいところは、もちろんプロジェクトを保存して置ける
　　事だが、それ以外にも、複数の人がそのプロジェクトを使用して
　　開発を行っていくので、誰がどこのコードを編集したかをgitが
　　覚えていてくれる。（IDEにgitlensをインストールするらしい。


７．settings.pyファイルにアプリを追加する

　・'mamazon.apps.MamazonConfig',

８．appディレクトリ内にテンプレートとproject内にstaticディレクトリ
　　を作成しておく

　・templates
　・static

９．settings.pyにスタティックディレクトリを読み込む設定

　・STATICFILES = [os.path.join(BASE_DIR, 'static')]
　（なぜこれをするのかというと、デフォルトではappディレクトリ内のstaticを見に行く
　　ように設定されているため、project全体で管理できるように設定している。

１０．htmlファイル、views.py、confi.urls.py、mamazon.urls.pyを編集し
　　　ページを出力

１１．gitにコミットする。ついでにgitのコマンド集

　・git clone https://github.com/.../ .
　このコマンドは、URLにあるファイル群をカレントディレクトリにダウンロードする。
　自分のgithubアカウントからじゃないとダウンロードできないらしい

　・git push https://github.com/.../

　・git remote add origin https://github.com/.../

１２．データベースの作成

　・models.pyを編集

１３．fixtureを使ってデータを指定したファイルから保存。これはtemplatesやstaticの
　　　ようにDjangoが認識してくれる。

　・mamazonアプリ内にfixtureディレクトリを作成

　・fixture内にproduct_data.jsonを作成

　・https://github.com/Sh0TaR0/mamazon_fixtures/blob/product_data.jsonから
　　コードをコピペする

　・python3 manage.py loaddata product_data.json
　（これでデータが保存される

１４．adminでデータを確認

　・admin.pyを編集

　・スーパーユーザーコマンドを打つ
　（ネーム：warise パス：kennowarise

　・データが挿入されていることを確認

１５．保存されている写真のリンクを設定

　・projectディレクトリ内にmediaフォルダーを作成

　・staticディレクトリと同じようにsettings.pyで編集する

　・MEDIA_URL = '/media/'
　　MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

　・写真のパスを通すためにconfig.urls.pyを編集

　・shoさんのgithubにあるmamazonをクローンし、写真を自分のmediaディレクトリ内に
　　コピペする

